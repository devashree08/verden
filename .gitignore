"""
Tiny JSON-ish logger setup. Keep it simple and consistent.
"""

from __future__ import annotations
import json
import logging
import sys
from typing import Any

from .config import LOG_LEVEL, SERVICE_NAME


class _JsonFormatter(logging.Formatter):
    def format(self, record: logging.LogRecord) -> str:
        base = {
            "service": SERVICE_NAME,
            "level": record.levelname,
            "message": record.getMessage(),
        }
        # Add extras if present
        if record.exc_info:
            base["exc_info"] = self.formatException(record.exc_info)
        if hasattr(record, "extra") and isinstance(record.extra, dict):
            base.update(record.extra)  # type: ignore[reportAny]
        return json.dumps(base, ensure_ascii=False)


def setup_logging() -> None:
    handler = logging.StreamHandler(sys.stdout)
    handler.setFormatter(_JsonFormatter())

    root = logging.getLogger()
    root.setLevel(LOG_LEVEL)
    root.handlers.clear()
    root.addHandler(handler)

    # Quiet down chatty libs in prod defaults
    logging.getLogger("httpx").setLevel("WARNING")
    logging.getLogger("fastmcp").setLevel("INFO")

