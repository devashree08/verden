# Smoke: Tool contracts

## Goal
Confirm the tools accept flexible inputs, normalize params, and return `{ "rows": [...] }`.

## Pre-reqs
- Server running:
  ```bash
  uv run python -m framework.core.bootstrap
  ```
- Token for a user with some data access.

## Cases

### 1) get_vast_general_by_user
- Params: `{ "vast": ["101","202"], "limit": 5 }`
- Expected: `{ "rows": [ { VastID: ..., PCICompliant: ..., ... } ] }`
- Output schema always includes `rows` (even if empty).

### 2) get_all_apps_value_by_user
- Params: `{ "vast": "101,202", "limit": 3 }`  (string CSV)
- Expected: same as above; normalized internally to CSV.

### 3) get_all_apps_summary_by_user
- Params: `{ "report_month": "Feb 2024", "vast": "101" }`
- Expected: `report_month` normalized to `"2024-02-01 00:00:00"`; returns rows for that month.

### 4) Pagination guardrails
- Params: `{ "limit": 999999, "offset": -10 }`
- Expected: limit capped at 15000, offset coerced to 0, no crash.

### 5) Backend switch (optional)
- Set `DB_BACKEND=bigquery` and repeat 1â€“3.
- Expected: Same shapes; results come from BQ tables.
