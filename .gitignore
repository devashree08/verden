#nullable enable
using Microsoft.AspNetCore.Authorization;
using Microsoft.Extensions.Options;
using Maturity.Portal.Authorization;
using Maturity.Portal.Configurations;
using Maturity.Portal.Services;

namespace Maturity.Portal.Extensions;

public static class ServiceCollectionExtensions
{
    public static IServiceCollection AddPortalPolicyServices(this IServiceCollection services, IConfiguration config)
    {
        services.Configure<HeaderIdentityOptions>(config.GetSection("Auth:Headers"));
        services.Configure<PolicyCacheOptions>(config.GetSection("Auth:PolicyCache"));

        services.AddMemoryCache();
        services.AddSingleton(TimeProvider.System);

        services.AddScoped<IPortalPolicyService, PortalPolicyService>();

        services.AddAuthorization(options =>
        {
            options.FallbackPolicy = new AuthorizationPolicyBuilder()
                .RequireAuthenticatedUser()
                .Build();

            PortalCompositePolicies.Register(options);
        });

        services.AddSingleton<IAuthorizationPolicyProvider>(sp =>
        {
            var opts = sp.GetRequiredService<IOptions<AuthorizationOptions>>();
            var fallback = new DefaultAuthorizationPolicyProvider(opts);
            return new DynamicPolicyProvider(fallback);
        });

        return services;
    }
}
