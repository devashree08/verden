CREATE OR ALTER PROC dbo.usp_PortalPolicies_GetForUser
    @UserEID    NVARCHAR(64)  = NULL,
    @UserName   NVARCHAR(256) = NULL
AS
BEGIN
    SET NOCOUNT ON;

    IF @UserEID IS NULL AND @UserName IS NULL
        THROW 50071, 'Either @UserEID or @UserName is required.', 1;

    ;WITH m AS (
        SELECT *
        FROM dbo.AdGroupFeed
        WHERE
            (@UserEID  IS NOT NULL AND UserEID = @UserEID)
         OR (@UserEID  IS NULL     AND @UserName IS NOT NULL
             AND UPPER(LTRIM(RTRIM(UserName))) = UPPER(LTRIM(RTRIM(@UserName))))
    ),
    admin_flag AS (
        SELECT CASE WHEN EXISTS (
                   SELECT 1
                   FROM m
                   WHERE UPPER(GroupName) = 'CYBER_PORTAL_ADMINS'
               ) THEN 1 ELSE 0 END AS IsAdmin
    ),
    org_memberships AS (
        -- match exact name first
        SELECT om.OrgId, om.OrgCode
        FROM m
        JOIN dbo.Portal_OrgMap om
          ON UPPER(m.GroupName) = UPPER(om.GroupNameExact)
        UNION
        -- optional pattern fallback
        SELECT om.OrgId, om.OrgCode
        FROM m
        JOIN dbo.Portal_OrgMap om
          ON om.GroupNameExact IS NULL
         AND om.GroupNameLike IS NOT NULL
         AND UPPER(m.GroupName) LIKE UPPER(om.GroupNameLike)
    ),
    any_membership AS (
        SELECT CASE WHEN EXISTS (SELECT 1 FROM org_memberships) THEN 1 ELSE 0 END AS HasAny
    )
    SELECT PolicyName
    FROM (
        -- baseline "PortalUser" if they are in ANY mapped org or an admin
        SELECT 'PortalUser' AS PolicyName, 1 AS keep
        FROM any_membership a
        CROSS JOIN admin_flag f
        WHERE a.HasAny = 1 OR f.IsAdmin = 1

        UNION ALL
        -- Admin
        SELECT 'Admin', 1
        FROM admin_flag
        WHERE IsAdmin = 1

        UNION ALL
        -- One Edit.<OrgCode>.All per matched org (admin implies all — we’ll add all rows)
        SELECT 'Edit.' + om.OrgCode + '.All', 1
        FROM admin_flag f
        JOIN dbo.Portal_OrgMap om
          ON f.IsAdmin = 1                 -- admins: include every org policy
        UNION ALL
        SELECT 'Edit.' + om.OrgCode + '.All', 1
        FROM org_memberships om            -- members: include only their orgs
    ) x
    WHERE keep = 1
    GROUP BY PolicyName            -- de-dup if admin path overlaps member path
    ORDER BY PolicyName;
END
GO
