-- 1) Clear target table
TRUNCATE TABLE dbo.owner_mapping;
GO

-- 2) Insert from dbo.analysis (Owner/Custodian), splitting names, normalizing subcat, joining org & ref tables,
--    and enriching with PZID/ContactEmail from dbo.adomfeed via fuzzy name match.
WITH A AS (
    SELECT
        a.BU,
        a._2_0_subcategory,
        a.[_2025_Owner],
        a.[_2025_Custodian]
    FROM dbo.analysis AS a
),
-- Unpivot Owner/Custodian into rows
Roles AS (
    SELECT
        BU,
        _2_0_subcategory,
        RoleName,
        NameList
    FROM A
    CROSS APPLY (VALUES
        ('Owner',     [_2025_Owner]),
        ('Custodian', [_2025_Custodian])
    ) v(RoleName, NameList)
    WHERE NameList IS NOT NULL
      AND LTRIM(RTRIM(CONVERT(varchar(max), NameList))) <> ''
),
-- Split comma-separated names into one row per person; trim whitespace
SplitNames AS (
    SELECT
        r.BU,
        r._2_0_subcategory,
        r.RoleName AS ContactRole,
        LTRIM(RTRIM(s.value)) AS FullName
    FROM Roles r
    CROSS APPLY STRING_SPLIT(CONVERT(varchar(max), r.NameList), ',') AS s
    WHERE LTRIM(RTRIM(s.value)) <> ''
),
-- Normalize subcategory: pad single-digit suffix after the last '-' with a leading zero.
-- 'DE.AE-2'  -> 'DE.AE-02'
-- 'DE.AE-10' -> unchanged
NormSubcat AS (
    SELECT
        sn.BU,
        sn._2_0_subcategory,
        sn.ContactRole,
        sn.FullName,
        CASE
            WHEN CHARINDEX('-', sn._2_0_subcategory) > 0 THEN
                CASE
                    WHEN LEN(RIGHT(sn._2_0_subcategory, CHARINDEX('-', REVERSE(sn._2_0_subcategory)) - 1)) = 1
                        THEN CONCAT(
                            LEFT(sn._2_0_subcategory,
                                 LEN(sn._2_0_subcategory) - (CHARINDEX('-', REVERSE(sn._2_0_subcategory)))),
                            '-0',
                            RIGHT(sn._2_0_subcategory, CHARINDEX('-', REVERSE(sn._2_0_subcategory)) - 1)
                        )
                    ELSE sn._2_0_subcategory
                END
            ELSE sn._2_0_subcategory
        END AS SubcatName_Normalized
    FROM SplitNames sn
),
-- Pre-compute cleaned/compact names for robust matching to adomfeed
PrepNames AS (
    SELECT
        n.BU,
        n.SubcatName_Normalized,
        n.ContactRole,
        n.FullName,
        -- CleanName: upper, punctuation -> spaces, trimmed
        UPPER(LTRIM(RTRIM(
            REPLACE(REPLACE(REPLACE(REPLACE(n.FullName, ',', ' '), '.', ' '), '''', ''), '  ', ' ')
        ))) AS CleanName,
        -- CompactName: upper, remove spaces & punctuation entirely
        UPPER(
            REPLACE(REPLACE(REPLACE(REPLACE(n.FullName, ' ', ''), ',', ''), '.', ''), '''', '')
        ) AS CompactName
    FROM NormSubcat n
),
-- Join to Org, Subcat, and enrich with adomfeed (PZID/ContactEmail)
Joined AS (
    SELECT DISTINCT
        ol.OrgID,
        rs.SubcatID AS CSF_2_0_SubacatID,
        p.FullName,
        p.ContactRole,
        af_match.PZID,
        af_match.ContactEmail
    FROM PrepNames p
    INNER JOIN dbo.orglist     AS ol ON ol.OrgAbbr    = p.BU
    INNER JOIN ref.CSF2_Subcat AS rs ON rs.subcatName = p.SubcatName_Normalized
    OUTER APPLY (
        -- Try to find the best adomfeed match for this FullName
        SELECT TOP (1)
            af.PZID,
            af.ContactEmail
        FROM dbo.adomfeed af
        CROSS APPLY (
            SELECT
                -- adomfeed cleaned/compact forms to mirror PrepNames
                UPPER(LTRIM(RTRIM(
                    REPLACE(REPLACE(REPLACE(REPLACE(af.FullName, ',', ' '), '.', ' '), '''', ''), '  ', ' ')
                ))) AS CleanAF,
                UPPER(
                    REPLACE(REPLACE(REPLACE(REPLACE(af.FullName, ' ', ''), ',', ''), '.', ''), '''', '')
                ) AS CompactAF
        ) afx
        CROSS APPLY (
            -- derive first/last token from p.CleanName for tolerant LIKE matching
            SELECT
                CASE
                    WHEN CHARINDEX(' ', p.CleanName) > 0
                        THEN LEFT(p.CleanName, CHARINDEX(' ', p.CleanName) - 1)
                    ELSE p.CleanName
                END AS FirstTok,
                CASE
                    WHEN CHARINDEX(' ', REVERSE(p.CleanName)) > 0
                        THEN RIGHT(p.CleanName, CHARINDEX(' ', REVERSE(p.CleanName)) - 1)
                    ELSE p.CleanName
                END AS LastTok
        ) t
        WHERE
            -- 1) exact compact match (ignoring spaces/punctuation)
            afx.CompactAF = p.CompactName
            -- 2) or tolerant: both first & last tokens appear somewhere (handles order/extra whitespace)
            OR (afx.CleanAF LIKE '%' + t.FirstTok + '%'
                AND afx.CleanAF LIKE '%' + t.LastTok  + '%')
        ORDER BY af.PZID  -- deterministic pick if multiple matches
    ) af_match
)
INSERT INTO dbo.owner_mapping
(
    OrgID,
    CSF_2_0_SubacatID,
    PZID,
    FullName,
    ContactEmail,
    ContactRole,
    Eff_Dt,
    Exp_Dt,
    Status
)
SELECT
    j.OrgID,
    j.CSF_2_0_SubacatID,
    j.PZID,
    j.FullName,
    j.ContactEmail,
    j.ContactRole,
    CAST('2025-08-01' AS date) AS Eff_Dt,
    CAST('2028-12-01' AS date) AS Exp_Dt,
    'A' AS Status
FROM Joined j;
GO
