CREATE OR ALTER PROCEDURE dbo.sp_AttributeArtifact_Mutate
  @Action              NVARCHAR(16),          -- 'Link' | 'Unlink'
  @OrgID               INT,
  @CSF2SubcategoryID   INT,
  @MaturityLevel       INT,
  @CSF1SubcategoryID   INT = NULL,            -- baseline only; NULL for custom
  @AttributeNum        INT = NULL,            -- baseline only; NULL for custom
  @CustomAttributeNum  INT = NULL,            -- custom only; NULL for baseline
  @Url                 NVARCHAR(2048) = NULL, -- required for Link; optional for Unlink if @ArtifactLinkID used
  @Title               NVARCHAR(300) = NULL,  -- optional (ignored for Unlink)
  @Actor               NVARCHAR(200) = NULL,  -- for CreatedBy on Link
  @ArtifactLinkID      INT = NULL             -- Unlink convenience
AS
BEGIN
  SET NOCOUNT ON;
  SET XACT_ABORT ON;

  IF @Action NOT IN ('Link','Unlink')
  BEGIN
    RAISERROR('Invalid @Action. Use Link | Unlink.', 16, 1);
    RETURN;
  END

  IF @Action = 'Link'
  BEGIN
    SET @Url = LTRIM(RTRIM(@Url));
    IF (@Url IS NULL OR @Url = '')
    BEGIN
      RAISERROR('Url is required for Link.', 16, 1);
      RETURN;
    END

    BEGIN TRY
      BEGIN TRAN;

      -- 1) Reactivate if identical inactive row exists
      UPDATE TOP (1) dbo.AttributeArtifact
         SET IsActive = 1,
             Title = COALESCE(@Title, Title),
             UpdatedAt = SYSUTCDATETIME()
       WHERE OrgID             = @OrgID
         AND CSF2SubcategoryID = @CSF2SubcategoryID
         AND MaturityLevel     = @MaturityLevel
         AND (
               (@CustomAttributeNum IS NULL AND CustomAttributeNum IS NULL
                AND CSF1SubcategoryID = @CSF1SubcategoryID
                AND AttributeNum      = @AttributeNum)
            OR (@CustomAttributeNum IS NOT NULL AND CustomAttributeNum = @CustomAttributeNum)
             )
         AND Url = @Url
         AND IsActive = 0;

      IF @@ROWCOUNT = 0
      BEGIN
        -- 2) Insert new (unique filtered index enforces "no dup active per attribute")
        BEGIN TRY
          INSERT dbo.AttributeArtifact
            (OrgID, CSF2SubcategoryID, MaturityLevel,
             CSF1SubcategoryID, AttributeNum, CustomAttributeNum,
             Url, Title, IsActive, CreatedBy)
          VALUES
            (@OrgID, @CSF2SubcategoryID, @MaturityLevel,
             @CSF1SubcategoryID, @AttributeNum, @CustomAttributeNum,
             @Url, NULLIF(@Title,''), 1, @Actor);
        END TRY
        BEGIN CATCH
          -- If a concurrent INSERT won the race, swallow dup key and continue
          IF ERROR_NUMBER() NOT IN (2601, 2627) THROW;
        END CATCH
      END

      COMMIT;
    END TRY
    BEGIN CATCH
      IF @@TRANCOUNT > 0 ROLLBACK;
      THROW;
    END CATCH

    -- Return the effective row (post-commit)
    SELECT TOP (1)
      ArtifactLinkID, OrgID, CSF2SubcategoryID, MaturityLevel,
      CSF1SubcategoryID, AttributeNum, CustomAttributeNum,
      Url, Title, IsActive, CreatedBy, CreatedAt, UpdatedAt
    FROM dbo.AttributeArtifact
    WHERE OrgID             = @OrgID
      AND CSF2SubcategoryID = @CSF2SubcategoryID
      AND MaturityLevel     = @MaturityLevel
      AND (
            (@CustomAttributeNum IS NULL AND CustomAttributeNum IS NULL
             AND CSF1SubcategoryID = @CSF1SubcategoryID
             AND AttributeNum      = @AttributeNum)
         OR (@CustomAttributeNum IS NOT NULL AND CustomAttributeNum = @CustomAttributeNum)
          )
      AND Url = @Url
    ORDER BY ArtifactLinkID DESC;

    RETURN;
  END

  -- Unlink
  IF @Action = 'Unlink'
  BEGIN
    BEGIN TRY
      BEGIN TRAN;

      IF @ArtifactLinkID IS NOT NULL
      BEGIN
        UPDATE dbo.AttributeArtifact
           SET IsActive = 0,
               UpdatedAt = SYSUTCDATETIME()
         WHERE ArtifactLinkID = @ArtifactLinkID
           AND IsActive = 1;
      END
      ELSE
      BEGIN
        SET @Url = LTRIM(RTRIM(@Url));
        IF (@Url IS NULL OR @Url = '')
        BEGIN
          ROLLBACK;
          RAISERROR('Url (or ArtifactLinkID) is required for Unlink.', 16, 1);
          RETURN;
        END

        UPDATE dbo.AttributeArtifact
           SET IsActive = 0,
               UpdatedAt = SYSUTCDATETIME()
         WHERE OrgID             = @OrgID
           AND CSF2SubcategoryID = @CSF2SubcategoryID
           AND MaturityLevel     = @MaturityLevel
           AND (
                 (@CustomAttributeNum IS NULL AND CustomAttributeNum IS NULL
                  AND CSF1SubcategoryID = @CSF1SubcategoryID
                  AND AttributeNum      = @AttributeNum)
              OR (@CustomAttributeNum IS NOT NULL AND CustomAttributeNum = @CustomAttributeNum)
               )
           AND Url      = @Url
           AND IsActive = 1;
      END

      COMMIT;
    END TRY
    BEGIN CATCH
      IF @@TRANCOUNT > 0 ROLLBACK;
      THROW;
    END CATCH

    SELECT @@ROWCOUNT AS affected;
    RETURN;
  END
END
GO




CREATE OR ALTER PROCEDURE dbo.sp_AttributeArtifact_List
  @Mode              NVARCHAR(16),          -- 'Attribute' | 'ReusePool'
  @OrgID             INT,
  @CSF2SubcategoryID INT,
  @MaturityLevel     INT = NULL,            -- required for Mode=Attribute
  @CSF1SubcategoryID INT = NULL,            -- "
  @AttributeNum      INT = NULL,            -- "
  @CustomAttributeNum INT = NULL,           -- "
  @Q                 NVARCHAR(200) = NULL   -- optional search for ReusePool
AS
BEGIN
  SET NOCOUNT ON;

  IF @Mode = 'Attribute'
  BEGIN
    IF @MaturityLevel IS NULL
    BEGIN
      RAISERROR('Mode=Attribute requires full attribute identity.', 16, 1);
      RETURN;
    END

    SELECT
      ArtifactLinkID,
      Url,
      Title,
      CreatedBy,
      CreatedAt,
      UpdatedAt
    FROM dbo.AttributeArtifact
    WHERE OrgID             = @OrgID
      AND CSF2SubcategoryID = @CSF2SubcategoryID
      AND MaturityLevel     = @MaturityLevel
      AND (
            (@CustomAttributeNum IS NULL AND CustomAttributeNum IS NULL
             AND CSF1SubcategoryID = @CSF1SubcategoryID
             AND AttributeNum      = @AttributeNum)
         OR (@CustomAttributeNum IS NOT NULL AND CustomAttributeNum = @CustomAttributeNum)
          )
      AND IsActive = 1
    ORDER BY COALESCE(UpdatedAt, CreatedAt) DESC, ArtifactLinkID DESC;

    RETURN;
  END

  IF @Mode = 'ReusePool'
  BEGIN
    SELECT
      Url,
      Title = MAX(Title),
      LastUsedAt = MAX(COALESCE(UpdatedAt, CreatedAt)),
      Uses = COUNT(*)
    FROM dbo.AttributeArtifact
    WHERE OrgID             = @OrgID
      AND CSF2SubcategoryID = @CSF2SubcategoryID
      AND IsActive = 1
      AND (@Q IS NULL OR Url LIKE '%' + @Q + '%' OR Title LIKE '%' + @Q + '%')
    GROUP BY Url
    ORDER BY LastUsedAt DESC;

    RETURN;
  END

  RAISERROR('Invalid @Mode. Use Attribute | ReusePool.', 16, 1);
END
GO






CREATE OR ALTER PROCEDURE dbo.sp_AttributeArtifact_BulkForExport
  @OrgIDsCsv        NVARCHAR(MAX) = NULL,
  @CSF2SubcatIDsCsv NVARCHAR(MAX) = NULL
AS
BEGIN
  SET NOCOUNT ON;

  CREATE TABLE #SelOrg (id INT PRIMARY KEY);
  IF ISNULL(LTRIM(RTRIM(@OrgIDsCsv)),'') <> ''
    INSERT #SelOrg
    SELECT TRY_CAST(LTRIM(RTRIM(value)) AS INT)
    FROM STRING_SPLIT(@OrgIDsCsv, ',')
    WHERE LTRIM(RTRIM(value)) <> '';

  CREATE TABLE #SelSub (id INT PRIMARY KEY);
  IF ISNULL(LTRIM(RTRIM(@CSF2SubcatIDsCsv)),'') <> ''
    INSERT #SelSub
    SELECT TRY_CAST(LTRIM(RTRIM(value)) AS INT)
    FROM STRING_SPLIT(@CSF2SubcatIDsCsv, ',')
    WHERE LTRIM(RTRIM(value)) <> '';

  SELECT
    OrgID,
    CSF2SubcategoryID,
    MaturityLevel,
    CSF1SubcategoryID,
    AttributeNum,
    CustomAttributeNum,
    Artifacts = STRING_AGG(
                  CASE WHEN Title IS NULL OR Title = ''
                       THEN Url
                       ELSE Title + ' (' + Url + ')'
                  END,
                  CHAR(10)
                ) WITHIN GROUP (ORDER BY COALESCE(UpdatedAt, CreatedAt) DESC)
  FROM dbo.AttributeArtifact
  WHERE IsActive = 1
    AND (NOT EXISTS(SELECT 1 FROM #SelOrg) OR OrgID IN (SELECT id FROM #SelOrg))
    AND (NOT EXISTS(SELECT 1 FROM #SelSub) OR CSF2SubcategoryID IN (SELECT id FROM #SelSub))
  GROUP BY
    OrgID, CSF2SubcategoryID, MaturityLevel, CSF1SubcategoryID, AttributeNum, CustomAttributeNum;
END
GO



