"""
Centralized, boring config access. No secrets here—Cloud Run injects them as env vars.
Other modules import from here so we don’t sprinkle os.getenv everywhere.
"""

from __future__ import annotations
import os
from typing import Final


# --- Service identity ---
SERVICE_NAME: Final[str] = os.getenv("SERVICE_NAME", "j9cv-VCSChatbot-mcp")

# --- HTTP / transport ---
HOST: Final[str] = os.getenv("HOST", "0.0.0.0")
PORT: Final[int] = int(os.getenv("PORT", "8080"))
HTTP_PATH: Final[str] = os.getenv("HTTP_PATH", "/mcp/")  # Streamable HTTP default

# --- Auth / OIDC (Keycloak) ---
OIDC_ISSUER_URI: Final[str] = os.getenv("OIDC_ISSUER_URI", "")   # e.g., https://keycloak-cde.acme.com/realm/acme-cde
OIDC_JWKS_URI: Final[str] = os.getenv("OIDC_JWKS_URI", "")       # e.g., .../protocol/openid-connect/certs
OIDC_ALLOWED_AUDIENCE: Final[str] = os.getenv("OIDC_ALLOWED_AUDIENCE", "account")  # your “mcp_service_audience”

# Optional strictness toggles
REQUIRE_EMAIL_CLAIM: Final[bool] = os.getenv("REQUIRE_EMAIL_CLAIM", "true").lower() == "true"
ALLOWED_ISSUERS: Final[list[str]] = [s for s in os.getenv("ALLOWED_ISSUERS", "").split(",") if s]  # optional allowlist

# --- Logging ---
LOG_LEVEL: Final[str] = os.getenv("LOG_LEVEL", "INFO")

