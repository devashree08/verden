/* OPTIONAL: uncomment if this load is a full refresh
TRUNCATE TABLE dbo.readiness;
GO
*/

WITH A AS (
    SELECT
        a.BU,
        a._2_0_subcategory,
        a.[_2025_Owner],
        a.[_2025_Custodian],
        a.In_Scope
    FROM dbo.analysis AS a
    WHERE a._2_0_subcategory IS NOT NULL
),
-- Normalize subcategory: pad a single-digit suffix after the last '-' with a leading zero
Norm AS (
    SELECT
        a.BU,
        a._2_0_subcategory,
        CASE
            WHEN CHARINDEX('-', a._2_0_subcategory) > 0 THEN
                CASE
                    WHEN LEN(RIGHT(a._2_0_subcategory, CHARINDEX('-', REVERSE(a._2_0_subcategory)) - 1)) = 1
                        THEN CONCAT(
                            LEFT(a._2_0_subcategory,
                                 LEN(a._2_0_subcategory) - (CHARINDEX('-', REVERSE(a._2_0_subcategory)))),
                            '-0',
                            RIGHT(a._2_0_subcategory, CHARINDEX('-', REVERSE(a._2_0_subcategory)) - 1)
                        )
                    ELSE a._2_0_subcategory
                END
            ELSE a._2_0_subcategory
        END AS SubcatName_Normalized,
        LTRIM(RTRIM(CONVERT(varchar(max), a.[_2025_Owner])))     AS OwnerRaw,
        LTRIM(RTRIM(CONVERT(varchar(max), a.[_2025_Custodian]))) AS CustodianRaw,
        a.In_Scope
    FROM A a
),
-- Join to org and subcat lookup tables
Joined AS (
    SELECT
        ol.OrgID,
        ol.OrgFullName,
        ol.OrgAbbr,
        br.SubcatID,
        br.SubcatName,
        br.SubcatDescription,
        br.[RelatedcSF1_1] AS RelatedCSF1_1,
        n.OwnerRaw,
        n.CustodianRaw,
        n.In_Scope
    FROM Norm n
    INNER JOIN dbo.orglist  AS ol ON ol.OrgAbbr     = n.BU
    INNER JOIN dbo.bu_ready AS br ON br.SubcatName  = n.SubcatName_Normalized
),
-- Roll up to one row per (OrgID, SubcatID); keep Owner/Custodian comma-separated
Rolled AS (
    SELECT
        j.OrgID,
        j.OrgFullName,
        j.OrgAbbr,
        j.SubcatID,
        j.SubcatName,
        j.SubcatDescription,
        j.RelatedCSF1_1,
        STRING_AGG(NULLIF(j.OwnerRaw, ''), ', ')     AS SubcatOwner,
        STRING_AGG(NULLIF(j.CustodianRaw, ''), ', ') AS SubcatCustodian,
        MAX(j.In_Scope)                               AS [Scope]
    FROM Joined j
    GROUP BY
        j.OrgID, j.OrgFullName, j.OrgAbbr,
        j.SubcatID, j.SubcatName, j.SubcatDescription, j.RelatedCSF1_1
)
INSERT INTO dbo.readiness
(
    OrgID, OrgFullName, OrgAbbr,
    SubcatOwner, SubcatCustodian,
    SubcatID, SubcatName, SubcatDescription, RelatedCSF1_1Subcat,
    [Scope], MaturityProject, ConsumingFromOrg, Department, LastUpdatedBy, LastUpdatedDate
)
SELECT
    r.OrgID, r.OrgFullName, r.OrgAbbr,
    r.SubcatOwner, r.SubcatCustodian,
    r.SubcatID, r.SubcatName, r.SubcatDescription, r.RelatedCSF1_1,
    r.[Scope],
    NULL AS MaturityProject,
    NULL AS ConsumingFromOrg,
    NULL AS Department,
    NULL AS LastUpdatedBy,
    NULL AS LastUpdatedDate
FROM Rolled r;
GO
