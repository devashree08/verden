// src/features/attributeMapping/components/molecules/AttributeStatsBar.jsx
import * as React from 'react';
import { Paper, Stack, Chip, Tooltip, Typography } from '@mui/material';
import { statsChipSx } from '../../utils/chipStyles';

export default function AttributeStatsBar({ rows = [] }) {
  const { ml3, ml4, total } = React.useMemo(() => {
    let m3 = 0, m4 = 0;
    for (const r of rows) {
      const isCustom = !!(r.customAttributeDefinition || r.customAttributeNum != null);
      const isBaselineKept = !isCustom && (r.selectionStatus || '') === 'Keep';
      const ml = Number(r.maturityLevel);
      if (ml === 3 && (isCustom || isBaselineKept)) m3++;
      if (ml === 4 && (isCustom || isBaselineKept)) m4++;
    }
    return { ml3: m3, ml4: m4, total: m3 + m4 };
  }, [rows]);

  return (
    <Paper variant="outlined" sx={{ p: 1, borderRadius: 2, mb: 1 }}>
      <Stack direction="row" spacing={1} alignItems="center" flexWrap="wrap" useFlexGap>
        <Typography variant="overline" sx={{ color: 'text.secondary', mr: 0.5 }}>
          Attribute Stats
        </Typography>

        <Tooltip title="ML3 total = kept baseline ML3 + custom ML3">
          <Chip size="small" label={`ML3: ${ml3}`} sx={(t) => statsChipSx(t, 'ml3')} />
        </Tooltip>

        <Tooltip title="ML4 total = kept baseline ML4 + custom ML4">
          <Chip size="small" label={`ML4: ${ml4}`} sx={(t) => statsChipSx(t, 'ml4')} />
        </Tooltip>

        <Tooltip title="Total = ML3 total + ML4 total">
          <Chip size="small" label={`Total: ${total}`} sx={(t) => statsChipSx(t, 'total')} />
        </Tooltip>
      </Stack>
    </Paper>
  );
}
